@use "@angular/material" as mat;
@use "helpers";
@use "devices";

$card-corner: var(--mat-sys-corner-medium);

:host {
  display: block;
  @include mat.table-overrides((
    row-item-container-height: auto,
    header-container-height: auto
  ));

  @include mat.card-overrides((
    elevated-container-shape: $card-corner
  ));
}

// Timeline wrapper
.timeline-component-container {
  display: flex;
  flex-direction: column;
  align-items: center;
}

// Header section
.header-container {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  gap: 1ch;
  margin-bottom: 16px;
  background-color: var(--mat-sys-tertiary-container);
  color: var(--mat-sys-on-tertiary-container);
  font: var(--mat-sys-title-medium);
  border-radius: $card-corner;
  padding: 8px 16px;
  justify-content: center;
  width: fit-content;

  .name-container {
    display: flex;
    gap: 0.5ch;
  }

  @include devices.device(phone, phablet) {
    font: var(--mat-sys-title-small);
  }
}

// Card container
.card {
  max-width: 650px;

  @include devices.device(tablet) {
    max-width: 550px;
  }
}

.card-content-container {
  display: flex;
  flex-direction: column;
  padding: 0 !important;
}

// Leg info inside card
.leg-info-container {
  display: grid;
  grid-auto-flow: column;
  grid-auto-columns: 1fr;
  text-align: center;
  background-color: var(--mat-sys-primary-container);
  color: var(--mat-sys-on-primary-container);
  border-radius: $card-corner $card-corner 0 0;
  padding: 8px;

  @include helpers.dark-mode {
    background-color: var(--mat-sys-surface-container-highest);
    color: var(--mat-sys-on-surface);
  }
}

.label-value-container {
  display: flex;
  flex-direction: column;

  .label, .value {
    font: var(--mat-sys-title-medium);

    @include devices.device(phone, phablet) {
      font: var(--mat-sys-title-small);
    }
  }

  .label {
    font-weight: 500;
  }

  .value {
    font-weight: 400;
  }
}

// Table styling
.my-table {
  table-layout: fixed;
  width: 100%;
  border-radius: 0 0 $card-corner $card-corner;
  overflow: hidden;
}

table {
  background-color: var(--mat-sys-surface-container);
  color: var(--mat-sys-on-surface);
}

.mat-mdc-header-cell {
  max-width: 20px;
}

th, td {
  padding: 8px;
  text-align: center;
}

td.mat-column-initials {
  border-right: 1px solid var(--mat-sys-outline);
  font-weight: 500;
}

// Player cell grid
.player-cell {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  justify-items: center;
  align-items: center;
  justify-content: center;

  .initials-cell {
    grid-column: 1;
  }

  .starter-icon {
    grid-column: 2;
  }

  .leg-winner-icon {
    grid-column: 3;
  }

  mat-icon {
    font-size: inherit;
    width: 1em;
    height: 1em;
  }

  .starter-icon {
    scale: 1.30;
  }

  .leg-winner-icon {
    scale: 1.5;
  }
}

@include devices.device(phone, phablet) {
  .player-cell {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: auto auto;

    .initials-cell {
      grid-column: 1 / span 2;
      grid-row: 1;
    }

    .starter-icon {
      grid-column: 1;
      grid-row: 2;
      scale: 1.0;
    }

    .leg-winner-icon {
      grid-column: 2;
      grid-row: 2;
      scale: 1.2;
    }
  }
}

// Divider between cards
.divider {
  width: 4px;
  height: 40px;
  background-color: var(--mat-sys-primary);
  position: relative;
  
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 12px;
    height: 12px;
    background-color: var(--mat-sys-primary);
    border-radius: 50%;
  }

  &.set-divider {
    background-color: var(--mat-sys-secondary);

    &::after {
      border-radius: 0;
      transform: translate(-50%, -50%) rotate(45deg);
      background-color: var(--mat-sys-secondary);
    }
  }

  @include devices.device(phone, phablet) {
    width: 2px;
    height: 30px;

    &::after {
      width: 8px;
      height: 8px;
    }
  }
}

