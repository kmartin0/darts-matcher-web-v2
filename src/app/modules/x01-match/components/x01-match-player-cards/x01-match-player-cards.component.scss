@use "@angular/material" as mat;

:host {
  @include mat.card-overrides((
    elevated-container-shape: var(--mat-sys-corner-small),
    elevated-container-elevation: var(--mat-sys-level1)
  ));
  width: 100%;
}

.players-container {
  width: 100%;
  display: flex;
  flex-direction: row;
  gap: 12px;
}

.player-overview-container {
  width: 100%;
  flex-direction: column;
  display: flex;
  gap: 24px;
}

.player-info-card {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 8px;
  padding: 8px;
}

.player-score {
  font: var(--mat-sys-title-large);
  min-height: var(--mat-sys-title-large-line-height);
  font-weight: 500;
}

.player-name {
  font: var(--mat-sys-headline-large);
  min-height: var(--mat-sys-headline-large-line-height);
  font-weight: 500;
}

.player-score-card {
  display: grid;
  grid-template-columns: repeat(3, 1fr); // 3 equal-width columns
  grid-template-rows: auto auto 1fr; // 1st row height is auto, 2nd row takes remaining space
  gap: 12px;
  padding: 8px;

  > * {
    text-align: center;
  }

  .remaining {
    grid-column: 1 / -1; // span all 3 columns
    font: var(--mat-sys-display-large);
    min-height: var(--mat-sys-display-large-line-height);
    font-weight: 500;

  }

  .checkout-hint {
    grid-column: 1 / -1; // span all 3 columns
  }

  .checkout-hint, .three-dart, .last-score, .first-nine {
    font: var(--mat-sys-title-large);
    min-height: var(--mat-sys-title-large-line-height);
    font-weight: 500;
  }

  .emphasize {
    font-weight: 600;
  }
}

.score-stats-container {
  display: flex;
  flex-direction: row;
  gap: 12px;
}
