@use "@angular/material" as mat;
@use "helpers";

:host {
  height: 100%;

  @include mat.table-overrides((
    row-item-outline-width: 0
  ));
}

.table-container {
  height: 100%;
  overflow-y: auto;
  display: flex;
  flex-direction: column-reverse;
}

@mixin table-row-color($mix-percent-light, $mix-percent-dark) {
  color: var(--mat-sys-on-surface);
  background-color: color-mix(in srgb, var(--mat-sys-surface) $mix-percent-light,  var(--mat-sys-secondary));

  @include helpers.dark-mode {
    color: var(--mat-sys-on-surface);
    background-color: color-mix(in srgb, var(--mat-sys-surface-container) $mix-percent-dark, var(--mat-sys-inverse-surface));
  }
}

table {
  table-layout: fixed;
  width: 100%;
  height: min-content;
  margin-bottom: auto;

  tr, th, td {
    font-size: 20px;
    line-height: 32px;
    font-weight: 500;
  }

  tr th {
    @include table-row-color(60%, 95%);
  }

  tr:nth-child(odd) td {
    @include table-row-color(70%, 85%);
  }

  tr:nth-child(even) td {
    @include table-row-color(80%, 80%);
  }

  td:not(:first-child), th:not(:first-child) {
    border-left: 4px solid var(--mat-sys-background);
  }

  td:not(:last-child), th:not(:last-child) {
    border-right: 4px solid var(--mat-sys-background);
  }
}

.cell-content-container {
  width: 100%;
  height: 100%;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(0, 1fr));
  align-items: center;
  justify-items: center;
}


